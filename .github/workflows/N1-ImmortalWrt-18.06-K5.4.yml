name: N1-ImmortalWrt-18.06-K5.4

on:
  workflow_dispatch:
  repository_dispatch:
    types:
      - N1-ImmortalWrt-18.06-K5.4

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Show system
      run: |
        echo -e "💬 Server information \n"
        echo -e "💻 Server running on Ubuntu: [ Release: $(cat /etc/os-release | grep VERSION_CODENAME | cut -d '=' -f2) / Host: `arch` ] \n"
        echo -e "🧮 Server CPU configuration information: \n$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo -e "💾 Server memory usage: \n$(free -h) \n"
        echo -e "🗃️ Server space usag: \n$(df -hT ${GITHUB_WORKSPACE}) \n"

    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
        sudo -E apt-get -y update
        sudo -E apt-get -y purge azure-cli* ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo -E apt-get -y install aria2
        sudo -E wget -P /usr/local/sbin/ https://github.com/HiGarfield/lede-17.01.4-Mod/raw/master/.github/backup/apt-fast
        sudo -E chmod -R 755 /usr/local/sbin/apt-fast
        sudo -E apt-fast -y -qq install dwarves quilt llvm clang lldb lld build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev \
          patch python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib p7zip-full msmtp libssl-dev texinfo libreadline-dev \
          libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget ccache curl \
          swig coreutils vim nano python3 python3-dev python3-pip python3-ply python3-pyelftools lrzsz scons
        pip3 install --user -U pylibfdt
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo timedatectl set-timezone "$TZ"

    - name: Prepare source code
      run: |
        sudo chown -R runner:runner /home/runner/work/build_openwrt
        cp -r scripts/immortalwrt-18.06-k5.4/. ./
        /bin/bash 01_prepare_source_code.sh
        echo "build_date=$(date +%Y.%m.%d)" >> ${GITHUB_ENV}

    - name: Prepare package
      run: |
        cd openwrt
        cp -r ../scripts/immortalwrt-18.06-k5.4/. ./
        /bin/bash 02_prepare_package.sh

    - name: Load custom configuration
      run: |
        cp -rf patch/files openwrt/files
        sed -i -e "s,DATE,${{ env.build_date }}," -e 's,WRT_VERSION,ImmortalWrt 18.06 K5.4,' ./openwrt/files/etc/banner

    - name: Make config
      run: |
        cd openwrt
        cp ../config/immortalwrt-18.06-k5.4/config.seed .config
        make defconfig

    - name: Download package
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      continue-on-error: true
      run: |
        cd openwrt
        make -j$(($(nproc) + 1))

    - name: If error
      if: steps.compile.outcome == 'failure'
      run: |
        cd openwrt && make -j1 V=s
  
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt_rootfs_${{ env.build_date }}
        path: openwrt/bin


    - name: Package firmware
      uses: ffuqiangg/openwrt_packit@master
      env:
        SCRIPT_REPO_URL: https://github.com/ffuqiangg/openwrt_packit
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*rootfs.tar.gz
        PACKAGE_SOC: s905d
        KERNEL_REPO_URL: ffuqiangg/amlogic-s9xxx-armbian
        KERNEL_VERSION_NAME: 5.4.1
        KERNEL_AUTO_LATEST: true
        GZIP_IMGS: .zip
        SCRIPT_S905D: mk_immortalwrt_18.06_k5.4_n1.sh
        OPENWRT_VER: '18.06 k5.4'
        SFE_FLOW: 0
        ENABLE_WIFI_K504: 0
        ENABLE_WIFI_K510: 0
        DISTRIB_REVISION: '18.06 k5.4'
        DISTRIB_DESCRIPTION: ImmortalWrt
        BUILD_DATE: ${{ env.build_date }}

    - name: Upload firmware to release
      uses: ncipollo/release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag: ${{ env.build_date }}
        allowUpdates: true
        replacesArtifacts: true
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/N1-ImmortalWrt-18.06-K5.4-${{ env.build_date }}.zip

  